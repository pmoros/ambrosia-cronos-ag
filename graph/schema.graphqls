# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Schedule {
  courseName: String!
  groupCode: String!
  professorName: String!
  day: String!
  building: String!
  classroom: String!
  timeOfStart: String!
  timeOfEnd: String!
}

type User {
  code: String!
  username: String!
  name: String!
}

type CourseGroup {
  code: String!
  capacity: Float!
  taken: Float!
  professor: User!
  schedules: [Schedule!]
}

type Course {
  code: String!
  name: String!
  component: String!
  requirements: [String!]!
  groups: [CourseGroup!]
}

type Grade {
  studentUsername: String!
  academicHistoryCode: String!
  grade: Float!
}

type ProgramInfo {
  code: String!
  name: String!
}

type ProgressInfo {
  total: String!
  disciplinar: String!
  fundamentacion: String!
  libreEleccion: String!
  nivelacion: String!
}

type CreditsInfo {
  total: Float!
  disciplinar: Float!
  fundamentacion: Float!
  libreEleccion: Float!
  nivelacion: Float!
}

type FinishedCourse {
  code: String!
  credits: Float!
  grade: Float!
  name: String!
  passed: Float!
}

type Semester {
  semesterLabel: String!
  courses: [FinishedCourse!]
}

type AcademicHistory {
  username: String!
  academicHistoryCode: String!
  pa: Float!
  papa: Float!
  programInfo: ProgramInfo!
  progressInfo: ProgressInfo!
  creditsInfo: CreditsInfo!
  semesters: [Semester!]
}

type Enrollment {
  courseCode: String!
  courseGroupCode: String!
}

input EnrollmentInput {
  studentUsername: String!
  academicHistoryCode: String!
  courseGroups: [CourseGroupInput!]!
}

input CourseGroupInput {
  courseCode: String!
  courseGroupCode: String!
}

input GradeInput {
  studentUsername: String!
  academicHistoryCode: String!
  grade: Float!
}

type Query {
  Courses(code: String, name: String, component: String): [Course]!
  Schedules(username: String): [Schedule]!
  AcademicHistories(
    username: String!
    academicHistoryCode: String!
  ): [AcademicHistory]!
}

type Mutation {
  EnrollCourses(input: EnrollmentInput!): [Enrollment]!
  UploadGrades(input: [GradeInput!]): [Grade]!
}
